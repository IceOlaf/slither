digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: BEGIN_LOOP 1
"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
counter_var = 0

IRs:
counter_var(uint256) := 0(uint256)"];
2->3;
3[label="Node Type: IF_LOOP 3

EXPRESSION:
counter_var <= len()(super.strategies)

IRs:
TMP_0(uint256) = SOLIDITY_CALL len()(strategies)
TMP_1(bool) = counter_var <= TMP_0
CONDITION TMP_1"];
3->4[label="True"];
3->6[label="False"];
4[label="Node Type: NEW VARIABLE 4

EXPRESSION:
strategy = strategies[counter_var]

IRs:
REF_0(address) -> strategies[counter_var]
strategy(address) := REF_0(address)"];
4->5;
5[label="Node Type: NEW VARIABLE 5

EXPRESSION:
z = IStrategy(strategy).asset()

IRs:
TMP_2 = CONVERT strategy to IStrategy
TMP_3(address) = HIGH_LEVEL_CALL, dest:TMP_2(IStrategy), function:asset, arguments:[]  
z(address) := TMP_3(address)"];
5->7;
6[label="Node Type: END_LOOP 6
"];
7[label="Node Type: EXPRESSION 7

EXPRESSION:
counter_var += 1

IRs:
counter_var(uint256) = counter_var (c)+ 1"];
7->3;
}
